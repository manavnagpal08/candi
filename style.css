/* Base Imports & Global Resets */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');

/* Hide GitHub fork button, Streamlit menu and footer */
#MainMenu {
    visibility: hidden;
}

footer {
    visibility: hidden;
}

header {
    visibility: hidden; /* Optional: hides the top bar */
}

/* Global body and HTML styling */
html,
body,
[class*="css"] {
    font-family: 'Inter', sans-serif;
    /* Background and color will be set dynamically by Streamlit based on dark_mode toggle */
    transition: background-color 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), color 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    scroll-behavior: smooth;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden; /* Prevent horizontal scroll */
}

/* Light mode default colors */
html {
    --background-color: #f0f2f6;
    --text-color: #333333;
    --card-background: rgba(255,255,255,0.98);
    --border-color-light: rgba(0, 0, 0, 0.08);
    --shadow-light: 0 30px 70px rgba(0, 0, 0, 0.15);
    --input-background: rgba(255,255,255,0.9);
    --input-border: rgba(0, 0, 0, 0.15);
}

/* Dark mode specific colors */
html[data-theme="dark"] {
    --background-color: #1a1a1a;
    --text-color: #f0f2f6;
    --card-background: #282828;
    --border-color-light: rgba(255, 255, 255, 0.08);
    --shadow-light: 0 30px 70px rgba(0, 0, 0, 0.6);
    --input-background: #3a3a3a;
    --input-border: rgba(255, 255, 255, 0.15);
}

/* Apply global theme variables */
html, body, [class*="css"] {
    background-color: var(--background-color);
    color: var(--text-color);
}


/* Custom scrollbar for a cleaner look */
::-webkit-scrollbar {
    width: 12px;
}

::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.15); /* Darker track for better contrast */
    border-radius: 10px;
}

html[data-theme="dark"] ::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.15); /* Lighter track for dark mode */
}

::-webkit-scrollbar-thumb {
    background: #00cec9; /* Teal thumb */
    border-radius: 10px;
    border: 3px solid transparent; /* Creates more padding effect */
    background-clip: padding-box;
    transition: background 0.4s ease;
}

::-webkit-scrollbar-thumb:hover {
    background: #00b0a8; /* Darker teal on hover */
}

/* Main content block container */
.main .block-container {
    padding: 4rem;
    border-radius: 35px;
    background: var(--card-background);
    box-shadow: var(--shadow-light);
    animation: fadeInScaleBounce 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    transition: background 0.7s ease-in-out, box-shadow 0.7s ease-in-out, border 0.7s ease-in-out;
    border: 1px solid var(--border-color-light);
    margin-bottom: 3.5rem;
    overflow: hidden;
}

/* Header (h1-h6) styling */
h1,
h2,
h3,
h4,
h5,
h6 {
    color: #00cec9;
    font-weight: 800;
    letter-spacing: -0.05em;
    line-height: 1.1;
    margin-bottom: 1em;
    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}

html[data-theme="dark"] h1,
html[data-theme="dark"] h2,
html[data-theme="dark"] h3,
html[data-theme="dark"] h4,
html[data-theme="dark"] h5,
html[data-theme="dark"] h6 {
    color: #00e0db; /* Slightly brighter teal for dark mode */
    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

/* Dashboard specific header */
.dashboard-header {
    font-size: 4rem;
    font-weight: 900;
    padding-bottom: 1.5rem;
    border-bottom: 8px solid #00cec9;
    display: inline-block;
    margin-bottom: 4rem;
    animation: slideInLeftFadeBounce 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    position: relative;
    overflow: hidden;
}

html[data-theme="dark"] .dashboard-header {
    border-bottom: 8px solid #00e0db; /* Consistent with dark mode header color */
}

@keyframes slideInLeftFadeBounce {
    0% {
        transform: translateX(-100px);
        opacity: 0;
    }
    60% {
        transform: translateX(10px); /* Overshoot for bounce effect */
        opacity: 1;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Greeting message animation (ENHANCED) */
@keyframes slideInDownFadeIn {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.greeting-message {
    font-size: 2.2rem;
    font-weight: 800;
    color: #00cec9;
    margin-bottom: 2.5rem;
    animation: slideInDownFadeIn 1s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    text-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    letter-spacing: -0.03em;
}

html[data-theme="dark"] .greeting-message {
    color: #00e0db;
    text-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
}

/* Metric boxes styling */
.stMetric {
    border-radius: 25px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
    transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), background-color 0.5s ease-in-out;
    overflow: hidden;
    position: relative;
    border: 1px solid rgba(0, 0, 0, 0.05);
    background: linear-gradient(145deg, rgba(255,255,255,0.98), rgba(240,242,246,0.9));
}

html[data-theme="dark"] .stMetric {
    border: 1px solid rgba(255, 255, 255, 0.05);
    background: linear-gradient(145deg, #3A3A3A, #2D2D2D);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
}

.stMetric:hover {
    transform: translateY(-15px) rotateX(3deg);
    box-shadow: 0 25px 55px rgba(0, 0, 0, 0.3);
    animation: metricHoverGlow 0.8s forwards;
}

html[data-theme="dark"] .stMetric:hover {
    box-shadow: 0 25px 55px rgba(0, 0, 0, 0.6); /* Darker shadow on hover for dark mode */
}

@keyframes metricHoverGlow {
    0% {
        box-shadow: 0 25px 55px rgba(0, 0, 0, 0.3);
    }
    50% {
        box-shadow: 0 25px 65px rgba(0, 206, 201, 0.4), 0 25px 55px rgba(0, 0, 0, 0.3);
    }
    100% {
        box-shadow: 0 25px 55px rgba(0, 0, 0, 0.3);
    }
}

html[data-theme="dark"] @keyframes metricHoverGlow {
    0% {
        box-shadow: 0 25px 55px rgba(0, 0, 0, 0.6);
    }
    50% {
        box-shadow: 0 25px 65px rgba(0, 206, 201, 0.5), 0 25px 55px rgba(0, 0, 0, 0.6);
    }
    100% {
        box-shadow: 0 25px 55px rgba(0, 0, 0, 0.6);
    }
}


.stMetric > div[data-testid="stMetricValue"] {
    font-size: 4rem;
    font-weight: 900;
    color: #00cec9;
    animation: pulseValue 3s infinite alternate ease-in-out;
    text-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

html[data-theme="dark"] .stMetric > div[data-testid="stMetricValue"] {
    color: #00e0db; /* Brighter teal for dark mode */
    text-shadow: 0 2px 5px rgba(0,0,0,0.3);
}

@keyframes pulseValue {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(1.05);
        opacity: 0.9;
    }
}

.stMetric > div[data-testid="stMetricLabel"] {
    font-size: 1.4rem;
    opacity: 0.8;
    font-weight: 600;
}

html[data-theme="dark"] .stMetric > div[data-testid="stMetricLabel"] {
    opacity: 0.9; /* Slightly higher opacity for better visibility */
    color: #cccccc; /* Lighter grey for dark mode labels */
}

/* Button styling */
.stButton > button {
    background-color: #00cec9;
    color: white;
    border-radius: 18px;
    padding: 1rem 2rem;
    font-weight: 700;
    border: none;
    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    letter-spacing: 0.05em;
    position: relative;
    overflow: hidden;
    z-index: 1;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    background-image: radial-gradient(circle at center, rgba(255,255,255,0.1) 0%, transparent 70%);
}

html[data-theme="dark"] .stButton > button {
    background-color: #00b0a8; /* Darker teal for dark mode */
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);
}

.stButton > button:hover {
    background-color: #00b0a8;
    transform: translateY(-8px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);
    outline: 3px solid rgba(0, 206, 201, 0.6);
    outline-offset: 4px;
}

html[data-theme="dark"] .stButton > button:hover {
    background-color: #009a93; /* Even darker teal on hover for dark mode */
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.6);
    outline: 3px solid rgba(0, 176, 168, 0.7);
}

.stButton > button:active {
    transform: translateY(-4px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    background-color: #009a93;
}

html[data-theme="dark"] .stButton > button:active {
    background-color: #00807b;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.5);
}

/* Ripple effect for buttons */
.stButton > button:after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 10px;
    background: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    opacity: 0;
    transform: scale(1) translate(-50%, -50%);
    transition: all 0.7s ease-out;
    z-index: -1;
}

.stButton > button:active:after {
    transform: scale(40) translate(-50%, -50%);
    opacity: 1;
    transition: 0s;
}

/* Expander styling */
.stExpander {
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border: 1px solid rgba(0, 0, 0, 0.06);
    background: rgba(255,255,255,0.95);
}

html[data-theme="dark"] .stExpander {
    border: 1px solid rgba(255, 255, 255, 0.06);
    background: #3A3A3A;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
}

.stExpander:hover {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
    transform: translateY(-8px);
}

html[data-theme="dark"] .stExpander:hover {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.5);
}

.stExpander > div > div > div > p {
    line-height: 1.9;
    font-size: 1.05rem;
    color: var(--text-color); /* Ensure text color changes with theme */
}

.stExpander > div[data-testid="stExpanderToggle"] {
    color: #00cec9;
    font-weight: 700;
    font-size: 1.4rem;
    cursor: pointer;
    padding-bottom: 0.8rem;
}

html[data-theme="dark"] .stExpander > div[data-testid="stExpanderToggle"] {
    color: #00e0db; /* Brighter teal for dark mode */
}


.stExpander > div[data-testid="stExpanderToggle"] svg {
    fill: #00cec9;
    transition: transform 0.4s ease;
}

html[data-theme="dark"] .stExpander > div[data-testid="stExpanderToggle"] svg {
    fill: #00e0db; /* Brighter teal for dark mode */
}


.stExpander > div[data-testid="stExpanderToggle"][aria-expanded="true"] svg {
    transform: rotate(90deg);
}

/* Form Elements Styling */

/* Selectbox styling */
.stSelectbox > div > div {
    border-radius: 18px;
    border: 1px solid var(--input-border);
    transition: all 0.4s ease;
    cursor: pointer;
    padding: 0.8rem 1.2rem;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.08);
    background: var(--input-background);
}

.stSelectbox > div > div:hover {
    border-color: #00cec9;
    box-shadow: 0 0 0 4px rgba(0, 206, 201, 0.4);
}

html[data-theme="dark"] .stSelectbox > div > div:hover {
    border-color: #00e0db;
    box-shadow: 0 0 0 4px rgba(0, 224, 219, 0.5);
}

.stSelectbox > div > div:focus-within {
    border-color: #00cec9;
    box-shadow: 0 0 0 5px rgba(0, 206, 201, 0.6);
    outline: none;
}

html[data-theme="dark"] .stSelectbox > div > div:focus-within {
    border-color: #00e0db;
    box-shadow: 0 0 0 5px rgba(0, 224, 219, 0.7);
}

.stSelectbox > label {
    font-weight: 600;
    margin-bottom: 0.7rem;
    display: block;
    font-size: 1.1rem;
    color: var(--text-color); /* Ensure label color changes with theme */
}

/* FIX: Explicit text color for the selected value in the selectbox input */
.stSelectbox > div > div > div[data-baseweb="select"] > div > span,
.stSelectbox > div > div > div[data-baseweb="select"] > div > div > span {
    color: var(--text-color) !important;
}

/* NEW: Styling for the dropdown options of selectbox */
/* Target the actual text within the option items */
div[data-baseweb="popover"] div[role="listbox"] div[role="option"] > div > span {
    color: var(--text-color) !important;
}

/* Background for the dropdown options and hover state */
div[data-baseweb="popover"] div[role="listbox"] {
    background-color: var(--background-color) !important;
    border: 1px solid var(--input-border) !important;
    border-radius: 12px !important;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15) !important;
}

html[data-theme="dark"] div[data-baseweb="popover"] div[role="listbox"] {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4) !important;
}

div[data-baseweb="popover"] div[role="listbox"] div[role="option"] {
    background-color: transparent !important;
}

div[data-baseweb="popover"] div[role="listbox"] div[role="option"]:hover {
    background-color: rgba(0, 206, 201, 0.2) !important;
}

html[data-theme="dark"] div[data-baseweb="popover"] div[role="listbox"] div[role="option"]:hover {
    background-color: rgba(0, 206, 201, 0.3) !important;
}


/* Text input and Text area styling */
.stTextInput > div > div > input,
.stTextArea > div > div {
    border-radius: 18px;
    border: 1px solid var(--input-border);
    padding: 1.1rem 1.4rem;
    transition: all 0.4s ease;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.08);
    background: var(--input-background);
    color: var(--text-color); /* Added for input text color */
}

.stTextInput > div > div > input::placeholder { /* Added for placeholder text color */
    color: var(--text-color);
    opacity: 0.7; /* Make placeholder slightly transparent */
}

html[data-theme="dark"] .stTextInput > div > div > input::placeholder {
    color: var(--text-color);
    opacity: 0.5; /* Slightly more transparent in dark mode */
}


.stTextInput > div > div > input:focus,
.stTextArea > div > div:focus-within {
    border-color: #00cec9;
    box-shadow: 0 0 0 5px rgba(0, 206, 201, 0.6);
    outline: none;
}

html[data-theme="dark"] .stTextInput > div > div > input:focus,
html[data-theme="dark"] .stTextArea > div > div:focus-within {
    border-color: #00e0db;
    box-shadow: 0 0 0 5px rgba(0, 224, 219, 0.7);
}

.stTextInput > div > div > input:hover,
.stTextArea > div > div:hover {
    border-color: #00b0a8;
}

html[data-theme="dark"] .stTextInput > div > div > input:hover,
html[data-theme="dark"] .stTextArea > div > div:hover {
    border-color: #00e0db;
}

.stTextInput > label,
.stTextArea > label {
    font-weight: 600;
    margin-bottom: 0.7rem;
    display: block;
    font-size: 1.1rem;
    color: var(--text-color); /* Ensure label color changes with theme */
}

/* Radio button styling */
/* Custom styling for st.sidebar.radio to make it look like buttons */
.stSidebar .stRadio div[role="radiogroup"] {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.stSidebar .stRadio div[role="radiogroup"] label {
    border-radius: 20px;
    padding: 1.2rem 1.8rem;
    font-weight: 600;
    border: none;
    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
    width: 100%;
    text-align: left;
    cursor: pointer;
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;
    z-index: 1;
    background: var(--card-background);
}

html[data-theme="dark"] .stSidebar .stRadio div[role="radiogroup"] label {
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.4);
}

.stSidebar .stRadio div[role="radiogroup"] label span:first-child {
    display: none;
}

.stSidebar .stRadio div[role="radiogroup"] label:hover {
    background-color: rgba(0, 206, 201, 0.2);
    transform: translateX(12px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.25);
}

html[data-theme="dark"] .stSidebar .stRadio div[role="radiogroup"] label:hover {
    background-color: rgba(0, 206, 201, 0.3);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
}

/* Style for the selected radio button (using input:checked + div) */
.stSidebar .stRadio div[role="radiogroup"] input:checked + div {
    background-color: #00cec9;
    color: white;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4);
    transform: translateX(0);
    border: 1px solid #00a09a;
    animation: sidebarSelectedPop 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

html[data-theme="dark"] .stSidebar .stRadio div[role="radiogroup"] input:checked + div {
    background-color: #00b0a8; /* Darker teal for selected in dark mode */
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.6);
    border: 1px solid #009a93;
}


@keyframes sidebarSelectedPop {
    0% {
        transform: scale(0.9);
    }
    70% {
        transform: scale(1.03); /* More overshoot */
    }
    100% {
        transform: scale(1);
    }
}

/* FIX: Explicit text color for unselected radio button labels in the sidebar */
.stSidebar .stRadio div[role="radiogroup"] label p {
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--text-color) !important;
}

.stSidebar .stRadio div[role="radiogroup"] input:checked + div p {
    color: white !important;
}

/* Custom styling for the dataframes */
.stDataFrame {
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
    transition: box-shadow 0.5s ease;
    border: 1px solid var(--border-color-light);
    background: var(--card-background);
}

html[data-theme="dark"] .stDataFrame {
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.5);
}

.stDataFrame:hover {
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.25);
}

html[data-theme="dark"] .stDataFrame:hover {
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.6);
}

.stDataFrame table {
    border-collapse: separate;
    border-spacing: 0;
    width: 100%;
}

.stDataFrame th {
    font-weight: 700;
    padding: 1.2rem 1.5rem;
    text-align: left;
    border-bottom: 5px solid #00cec9;
    position: sticky;
    top: 0;
    z-index: 2;
    transition: background-color 0.5s ease, color 0.5s ease;
    background-color: #f0f2f6; /* Light mode header background */
    color: #333333; /* Light mode header text */
}

html[data-theme="dark"] .stDataFrame th {
    background-color: #404040;
    color: #00e0db; /* Brighter teal for dark mode */
    border-bottom: 5px solid #00e0db;
}

.stDataFrame tbody tr:nth-child(odd) {
    background-color: var(--card-background);
}

.stDataFrame tbody tr:nth-child(even) {
    background-color: rgba(0,0,0,0.03); /* Slightly darker for even rows in light mode */
}

html[data-theme="dark"] .stDataFrame tbody tr:nth-child(even) {
    background-color: #202020; /* Darker for even rows in dark mode */
}


.stDataFrame td {
    padding: 1.1rem 1.5rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.12);
    transition: background-color 0.4s ease, color 0.4s ease;
    color: var(--text-color); /* Ensure text color changes with theme */
}

html[data-theme="dark"] .stDataFrame td {
    border-bottom: 1px solid rgba(255, 255, 255, 0.12);
}

.stDataFrame tbody tr:hover {
    background-color: rgba(0, 206, 201, 0.12) !important;
}

html[data-theme="dark"] .stDataFrame tbody tr:hover {
    background-color: rgba(0, 206, 201, 0.18) !important;
}


/* Info/Warning/Error/Success boxes */
.stAlert {
    border-radius: 18px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    animation: fadeInSlideUp 0.8s ease-out;
    transition: all 0.5s ease;
    border: 1px solid var(--border-color-light);
    position: relative;
    overflow: hidden;
}

html[data-theme="dark"] .stAlert {
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
}

.stAlert:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
}

html[data-theme="dark"] .stAlert:hover {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.5);
}

/* Specific alert types (Streamlit's internal classes are targeted) */
.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn0 {
    /* Info */
    background-color: #E0F7FA;
    color: #006064;
    border-left: 8px solid #00BCD4;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn0 svg {
    fill: #00BCD4;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn0 {
    background-color: #2A3C4D;
    color: #A7D9EB;
    border-left: 8px solid #00B8D4;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn0 svg {
    fill: #00B8D4;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn1 {
    /* Success */
    background-color: #E8F5E9;
    color: #2E7D32;
    border-left: 8px solid #4CAF50;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn1 svg {
    fill: #4CAF50;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn1 {
    background-color: #2C472C;
    color: #A8D5A8;
    border-left: 8px solid #4CAF50;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn1 svg {
    fill: #4CAF50;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn2 {
    /* Warning */
    background-color: #FFFDE7;
    color: #FF8F00;
    border-left: 8px solid #FFC107;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn2 svg {
    fill: #FFC107;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn2 {
    background-color: #4D422C;
    color: #EBD9A7;
    border-left: 8px solid #FFC107;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn2 svg {
    fill: #FFC107;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn3 {
    /* Error */
    background-color: #FFEBEE;
    color: #D32F2F;
    border-left: 8px solid #F44336;
}

.stAlert.st-emotion-cache-1f0o48a.e1f1d6gn3 svg {
    fill: #F44336;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn3 {
    background-color: #4D2C2C;
    color: #EBA7A7;
    border-left: 8px solid #F44336;
}

html[data-theme="dark"] .stAlert.st-emotion-cache-1f0o48a.e1f1d6gn3 svg {
    fill: #F44336;
}

/* Top Header Styles */
.top-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem 4rem;
    background: linear-gradient(145deg, rgba(255,255,255,0.99), rgba(245,247,250,0.9));
    margin-bottom: 4rem;
    border-radius: 30px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.18);
    transition: background-color 0.5s ease-in-out, box-shadow 0.5s ease-in-out, border-color 0.5s ease-in-out;
    border: 1px solid var(--border-color-light);
    animation: slideInDownFadeIn 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

html[data-theme="dark"] .top-header {
    background: linear-gradient(145deg, #282828, #202020);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.5);
}

.top-header h1 {
    margin: 0;
    color: #00cec9;
    font-size: 2.8rem;
    font-weight: 900;
    letter-spacing: -0.06em;
    text-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
}

html[data-theme="dark"] .top-header h1 {
    color: #00e0db;
    text-shadow: 0 3px 8px rgba(0, 0, 0, 0.4);
}

.top-header .profile {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    font-weight: 600;
    color: var(--text-color); /* Ensure profile text color changes with theme */
}

.top-header .profile a {
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease, text-decoration 0.3s ease;
    color: #00cec9; /* Link color */
}

html[data-theme="dark"] .top-header .profile a {
    color: #00e0db; /* Brighter teal for links in dark mode */
}

.top-header .profile a:hover {
    color: #00b0a8;
    text-decoration: underline;
}

html[data-theme="dark"] .top-header .profile a:hover {
    color: #00c9c2; /* Darker teal on hover for dark mode */
}

/* Additional User-Friendly Enhancements & Animations */

/* Card-like containers for general elements */
.stCard {
    border-radius: 25px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.1);
    transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), background-color 0.5s ease-in-out;
    border: 1px solid var(--border-color-light);
    position: relative;
    background: var(--card-background);
}

html[data-theme="dark"] .stCard {
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.4);
}

.stCard:hover {
    transform: translateY(-12px);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.25);
}

html[data-theme="dark"] .stCard:hover {
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.6);
}

/* Progress Bar Styling */
.stProgress > div > div {
    border-radius: 15px;
    height: 16px;
    background-color: rgba(0, 206, 201, 0.3);
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.15);
}

html[data-theme="dark"] .stProgress > div > div {
    background-color: rgba(0, 206, 201, 0.2); /* Slightly less opaque for dark mode */
    box-shadow: inset 0 2px 5px rgba(255, 255, 255, 0.15);
}

.stProgress > div > div > div {
    background-color: #00cec9;
    border-radius: 15px;
    transition: width 0.8s ease-out;
    position: relative;
    overflow: hidden;
}

html[data-theme="dark"] .stProgress > div > div > div {
    background-color: #00e0db; /* Brighter teal for dark mode */
}

.stProgress > div > div > div::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-image: linear-gradient(45deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent);
    background-size: 1.2rem 1.2rem;
    animation: progressStripe 1s linear infinite;
    border-radius: 15px;
}

@keyframes progressStripe {
    from {
        background-position: 1.2rem 0;
    }
    to {
        background-position: 0 0;
    }
}

/* Checkbox and Radio Button Circles (visual enhancement) */
.stCheckbox > label > div > span:first-child,
.stRadio > label > div > span:first-child {
    border-radius: 50%;
    border: 3px solid #00cec9;
    width: 1.4em;
    height: 1.4em;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.4s ease;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.15);
}

html[data-theme="dark"] .stCheckbox > label > div > span:first-child,
html[data-theme="dark"] .stRadio > label > div > span:first-child {
    border-color: #00e0db;
    box-shadow: inset 0 2px 5px rgba(255, 255, 255, 0.15);
}

.stCheckbox > label > div > span:first-child svg,
.stRadio > label > div > span:first-child svg {
    fill: #00cec9;
    transform: scale(0);
    transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

html[data-theme="dark"] .stCheckbox > label > div > span:first-child svg,
html[data-theme="dark"] .stRadio > label > div > span:first-child svg {
    fill: #00e0db;
}

.stCheckbox > label > div > input:checked + span:first-child,
.stRadio > label > div > input:checked + span:first-child {
    background-color: #00cec9;
    border-color: #00cec9;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.15), 0 0 0 5px rgba(0, 206, 201, 0.4);
}

html[data-theme="dark"] .stCheckbox > label > div > input:checked + span:first-child,
html[data-theme="dark"] .stRadio > label > div > input:checked + span:first-child {
    background-color: #00e0db;
    border-color: #00e0db;
    box-shadow: inset 0 2px 5px rgba(255, 255, 255, 0.15), 0 0 0 5px rgba(0, 224, 219, 0.5);
}

/* Tooltip styling (for custom tooltips if added) */
.stTooltip {
    background-color: rgba(0, 0, 0, 0.95);
    color: white;
    border-radius: 12px;
    padding: 0.7rem 1.4rem;
    font-size: 1rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.4s ease, transform 0.4s ease;
    transform: translateY(20px);
    backdrop-filter: blur(8px);
}

html[data-theme="dark"] .stTooltip {
    background-color: rgba(255, 255, 255, 0.9); /* Lighter background for dark mode tooltip */
    color: #333333; /* Darker text for dark mode tooltip */
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);
}

.stTooltip.show {
    opacity: 1;
    transform: translateY(0);
}

/* Global text styling for readability */
p {
    line-height: 1.9;
    margin-bottom: 1.5em;
    font-size: 1.1rem;
    color: var(--text-color); /* Ensure paragraph text color changes with theme */
}

/* Link styling */
a {
    color: #00cec9;
    text-decoration: none;
    transition: color 0.3s ease, text-decoration 0.3s ease;
    font-weight: 600;
}

html[data-theme="dark"] a {
    color: #00e0db; /* Brighter teal for links in dark mode */
}

a:hover {
    color: #00b0a8;
    text-decoration: underline;
}

html[data-theme="dark"] a:hover {
    color: #00c9c2; /* Darker teal on hover for dark mode */
}

/* Utility Classes (can be added via st.markdown('<div class="my-class">...</div>', unsafe_allow_html=True)) */
.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}

.fade-in {
    animation: fadeIn 0.8s ease-in-out forwards;
}

.slide-up {
    animation: fadeInSlideUp 0.9s ease-out forwards;
}

/* Responsive Design (Enhanced Breakpoints) */
@media (max-width: 1024px) { /* Tablet landscape */
    .main .block-container {
        padding: 3rem;
        border-radius: 25px;
    }
    .dashboard-header {
        font-size: 3.2rem;
        margin-bottom: 3rem;
    }
    .greeting-message {
        font-size: 1.6rem;
    }
    .stMetric {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }
    .stMetric > div[data-testid="stMetricValue"] {
        font-size: 3rem;
    }
    .stMetric > div[data-testid="stMetricLabel"] {
        font-size: 1.2rem;
    }
    .top-header {
        padding: 1.5rem 3rem;
        margin-bottom: 3rem;
        border-radius: 25px;
    }
    .top-header h1 {
        font-size: 2.2rem;
    }
    .top-header .profile {
        font-size: 1.05rem;
    }
    .stButton > button {
        padding: 0.8rem 1.6rem;
        font-size: 0.95rem;
    }
    .stExpander {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }
    .stExpander > div[data-testid="stExpanderToggle"] {
        font-size: 1.2rem;
    }
    .stSelectbox > div > div,
    .stTextInput > div > div > input,
    .stTextArea > div > div {
        padding: 0.9rem 1.2rem;
    }
    .stSelectbox > label,
    .stTextInput > label,
    .stTextArea > label {
        font-size: 1rem;
    }
    .stDataFrame th,
    .stDataFrame td {
        padding: 1rem 1.2rem;
    }
    .stAlert {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border-radius: 15px;
        border-left-width: 7px;
    }
    p {
        font-size: 1rem;
    }
}

@media (max-width: 768px) { /* Tablet portrait & large mobile */
    .main .block-container {
        padding: 2.5rem;
        border-radius: 20px;
    }
    .dashboard-header {
        font-size: 2.8rem;
        margin-bottom: 2.5rem;
        border-bottom-width: 6px;
    }
    .greeting-message {
        font-size: 1.4rem;
        margin-bottom: 2rem;
    }
    .stMetric {
        padding: 1.2rem;
        margin-bottom: 1.2rem;
    }
    .stMetric > div[data-testid="stMetricValue"] {
        font-size: 2.8rem;
    }
    .stMetric > div[data-testid="stMetricLabel"] {
        font-size: 1.1rem;
    }
    .top-header {
        padding: 1.2rem 2rem;
        margin-bottom: 2.5rem;
        border-radius: 20px;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.8rem;
    }
    .top-header h1 {
        font-size: 2rem;
    }
    .top-header .profile {
        font-size: 1rem;
    }
    .stButton > button {
        padding: 0.7rem 1.4rem;
        font-size: 0.9rem;
    }
    .stExpander {
        padding: 1.2rem;
        margin-bottom: 1.2rem;
    }
    .stExpander > div[data-testid="stExpanderToggle"] {
        font-size: 1.1rem;
    }
    .stSelectbox > div > div,
    .stTextInput > div > div > input,
    .stTextArea > div > div {
        padding: 0.8rem 1.1rem;
    }
    .stSelectbox > label,
    .stTextInput > label,
    .stTextArea > label {
        font-size: 0.98rem;
    }
    .stDataFrame th,
    .stDataFrame td {
        padding: 0.8rem 1.1rem;
    }
    .stAlert {
        padding: 1.2rem;
        margin-bottom: 1.2rem;
        border-radius: 15px;
        border-left-width: 6px;
    }
    p {
        font-size: 0.98rem;
    }
}

@media (max-width: 480px) { /* Small mobile */
    .main .block-container {
        padding: 1.5rem;
        border-radius: 15px;
    }
    .dashboard-header {
        font-size: 2.2rem;
        margin-bottom: 2rem;
        border-bottom-width: 4px;
    }
    .greeting-message {
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
    }
    .stMetric {
        padding: 1rem;
        margin-bottom: 1rem;
    }
    .stMetric > div[data-testid="stMetricValue"] {
        font-size: 2.2rem;
    }
    .stMetric > div[data-testid="stMetricLabel"] {
        font-size: 0.9rem;
    }
    .top-header {
        padding: 0.8rem 1rem;
        margin-bottom: 2rem;
        border-radius: 12px;
    }
    .top-header h1 {
        font-size: 1.5rem;
    }
    .top-header .profile {
        font-size: 0.85rem;
    }
    .stButton > button {
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
    }
    .stExpander {
        padding: 1rem;
        margin-bottom: 1rem;
    }
    .stExpander > div[data-testid="stExpanderToggle"] {
        font-size: 1rem;
    }
    .stSelectbox > div > div,
    .stTextInput > div > div > input,
    .stTextArea > div > div {
        padding: 0.6rem 0.9rem;
    }
    .stSelectbox > label,
    .stTextInput > label,
    .stTextArea > label {
        font-size: 0.9rem;
    }
    .stDataFrame th,
    .stDataFrame td {
        padding: 0.6rem 0.9rem;
    }
    .stAlert {
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 10px;
        border-left-width: 4px;
    }
    p {
        font-size: 0.9rem;
    }
}
