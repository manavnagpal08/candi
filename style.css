/* style.css - The "Ultra Modern & Immersive" Edition */

/* --- Google Fonts Import --- */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Montserrat:wght@400;600;700;800&display=swap');

/* --- Root Variables (Light and Dark Mode) --- */
:root {
    /* Base Colors - Light Mode */
    --color-bg-primary-light: #f7fafd; /* Very light blue-grey */
    --color-bg-secondary-light: #ffffff; /* Pure white for main elements */
    --color-text-primary-light: #2c3e50; /* Dark charcoal */
    --color-text-secondary-light: #7f8c8d; /* Muted grey */
    --color-border-light: #e0e6ed; /* Soft border */

    /* Accent Color (Consistent for both modes) */
    --color-accent-main: #4285F4; /* Google Blue */
    --color-accent-dark: #3367d6; /* Slightly darker */
    --color-accent-light: #6fa8f7; /* Slightly lighter */
    --color-accent-fade: rgba(66, 133, 244, 0.1);

    /* Shadows - Deep and layered for "floating" effect */
    --shadow-1: 0 1px 3px rgba(0,0,0,0.08), 0 1px 2px rgba(0,0,0,0.05);
    --shadow-2: 0 4px 8px rgba(0,0,0,0.1), 0 2px 4px rgba(0,0,0,0.06);
    --shadow-3: 0 10px 20px rgba(0,0,0,0.15), 0 5px 10px rgba(0,0,0,0.08);
    --shadow-inset: inset 0 1px 3px rgba(0,0,0,0.05);

    /* Glassmorphism Effect */
    --glass-blur: 15px;
    --glass-bg-light: rgba(255, 255, 255, 0.7);
    --glass-border-light: rgba(255, 255, 255, 0.4);

    /* Animation Variables */
    --transition-duration: 0.5s;
    --transition-ease: cubic-bezier(0.2, 0.8, 0.2, 1); /* More elastic ease */
}

body.dark-mode {
    /* Base Colors - Dark Mode */
    --color-bg-primary-dark: #1a1a2e; /* Deep indigo-like background */
    --color-bg-secondary-dark: #2c2c4d; /* Slightly lighter for cards */
    --color-text-primary-dark: #ecf0f1; /* Off-white */
    --color-text-secondary-dark: #bdc3c7; /* Muted light grey */
    --color-border-dark: #3e4a63; /* Darker border */

    /* Accent remains the same for vibrancy */

    /* Shadows - More subtle in dark mode, but still present */
    --shadow-1: 0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.2);
    --shadow-2: 0 4px 8px rgba(0,0,0,0.4), 0 2px 4px rgba(0,0,0,0.25);
    --shadow-3: 0 10px 20px rgba(0,0,0,0.5), 0 5px 10px rgba(0,0,0,0.3);
    --shadow-inset: inset 0 1px 3px rgba(0,0,0,0.2);

    /* Glassmorphism Effect - Darker */
    --glass-bg-dark: rgba(44, 44, 77, 0.7);
    --glass-border-dark: rgba(62, 74, 99, 0.4);
}

/* --- Global Base Styles --- */
html, body, .stApp {
    font-family: 'Roboto', sans-serif; /* Clean, modern sans-serif for body */
    background: var(--color-bg-primary-light);
    color: var(--color-text-primary-light);
    transition: background var(--transition-duration) var(--transition-ease),
                color var(--transition-duration) var(--transition-ease);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden; /* Prevent horizontal scroll from animations */
}

/* Dynamic Background Gradient (Subtle Animation) */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at top left, var(--color-accent-fade) 0%, transparent 40%),
                radial-gradient(circle at bottom right, var(--color-accent-fade) 0%, transparent 40%);
    z-index: -2; /* Behind everything */
    opacity: 0.5;
    animation: backgroundMove 20s infinite alternate ease-in-out;
}

@keyframes backgroundMove {
    0% { background-position: 0% 0%, 100% 100%; }
    100% { background-position: 100% 100%, 0% 0%; }
}


body.dark-mode {
    background: var(--color-bg-primary-dark);
    color: var(--color-text-primary-dark);
}
body.dark-mode::before {
    background: radial-gradient(circle at top left, rgba(66, 133, 244, 0.05) 0%, transparent 40%),
                radial-gradient(circle at bottom right, rgba(66, 133, 244, 0.05) 0%, transparent 40%);
}


/* Custom Scrollbar */
::-webkit-scrollbar {
    width: 12px;
    height: 12px;
}
::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 6px;
}
::-webkit-scrollbar-thumb {
    background: var(--color-accent-main);
    border-radius: 6px;
    border: 3px solid transparent;
    background-clip: content-box;
    transition: background var(--transition-duration) var(--transition-ease);
}
::-webkit-scrollbar-thumb:hover {
    background: var(--color-accent-dark);
}
body.dark-mode ::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
}

/* Selection Color */
::selection {
    background: var(--color-accent-main);
    color: white;
}

/* --- Typography --- */
h1, h2, h3, h4, h5, h6 {
    font-family: 'Montserrat', sans-serif; /* Stronger, more elegant sans-serif for headings */
    color: var(--color-accent-main);
    margin-top: 2em;
    margin-bottom: 1em;
    font-weight: 700;
    text-shadow: var(--shadow-1);
    transition: color var(--transition-duration) var(--transition-ease);
}

h1 { font-size: 3em; line-height: 1.2; }
h2 { font-size: 2.4em; font-weight: 600; }
h3 { font-size: 1.9em; font-weight: 600; }
p { line-height: 1.8; color: var(--color-text-secondary-light); }
body.dark-mode p { color: var(--color-text-secondary-dark); }
a { color: var(--color-accent-main); text-decoration: none; transition: all var(--transition-duration) var(--transition-ease); }
a:hover { color: var(--color-accent-dark); text-decoration: underline; transform: translateY(-1px); }

/* --- Sidebar Styling (Glassmorphism) --- */
.stSidebar {
    background: var(--glass-bg-light);
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur)); /* For Safari */
    border-right: 1px solid var(--glass-border-light);
    box-shadow: var(--shadow-3);
    padding-top: 3rem;
    color: var(--color-text-primary-light);
    transition: all var(--transition-duration) var(--transition-ease);
}

body.dark-mode .stSidebar {
    background: var(--glass-bg-dark);
    border-right: 1px solid var(--glass-border-dark);
    box-shadow: var(--shadow-3); /* Still prominent */
    color: var(--color-text-primary-dark);
}

.stSidebar .stButton > button {
    width: calc(100% - 2.5rem); /* Adjust for padding */
    margin: 0.75rem 1.25rem;
    background: transparent;
    color: var(--color-text-primary-light);
    border: none;
    box-shadow: none;
    transition: all var(--transition-duration) var(--transition-ease);
    font-weight: 500;
    padding: 1rem 1.5rem;
    border-radius: 1rem; /* More rounded */
    text-align: left;
    display: flex;
    align-items: center;
    gap: 1rem;
    position: relative;
    overflow: hidden;
}

body.dark-mode .stSidebar .stButton > button {
    color: var(--color-text-primary-dark);
}

.stSidebar .stButton > button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-accent-fade);
    transform: translateX(-100%);
    transition: transform var(--transition-duration) var(--transition-ease);
    z-index: -1;
}

.stSidebar .stButton > button:hover::before {
    transform: translateX(0);
}

.stSidebar .stButton > button:hover {
    color: var(--color-accent-main);
    transform: translateY(-3px); /* Subtle lift */
    box-shadow: var(--shadow-1);
    background: var(--color-accent-fade); /* Set background on hover for glass effect */
}

body.dark-mode .stSidebar .stButton > button:hover {
    color: var(--color-accent-light);
    box-shadow: var(--shadow-1);
    background: var(--color-accent-fade);
}

/* Custom HR Portal Button in sidebar */
.stSidebar a > button {
    background: linear-gradient(45deg, #28a745, #218838) !important; /* Green gradient */
    color: white !important;
    border: none !important;
    border-radius: 1rem !important; /* Consistent with other buttons */
    padding: 1rem 1.8rem !important;
    font-weight: 700 !important;
    width: calc(100% - 2.5rem) !important;
    margin: 1.5rem 1.25rem !important;
    cursor: pointer !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    gap: 12px !important;
    box-shadow: var(--shadow-2) !important;
    transition: all var(--transition-duration) var(--transition-ease) !important;
    overflow: hidden;
    position: relative;
    z-index: 1;
}

.stSidebar a > button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transition: width 0.5s ease-out, height 0.5s ease-out, top 0.5s ease-out, left 0.5s ease-out;
    transform: translate(-50%, -50%);
    z-index: -1;
}

.stSidebar a > button:hover::before {
    width: 300%;
    height: 300%;
}

.stSidebar a > button:hover {
    background: linear-gradient(45deg, #218838, #1e7e34) !important;
    transform: translateY(-5px) scale(1.03) !important; /* More lift, slight scale */
    box-shadow: var(--shadow-3) !important;
}

body.dark-mode .stSidebar a > button {
    box-shadow: var(--shadow-2) !important;
}
body.dark-mode .stSidebar a > button:hover {
    box-shadow: var(--shadow-3) !important;
}

/* --- Main Content Styling --- */
.main .block-container {
    padding-top: 2rem;
    padding-bottom: 3rem;
    padding-left: 5rem; /* Generous side padding */
    padding-right: 5rem;
    opacity: 0;
    transform: translateY(40px); /* Deeper slide-up for entrance */
    animation: fadeInSlideUp var(--transition-duration) 0.2s var(--transition-ease) forwards; /* Slight delay */
}

/* Keyframe for page fade-in and slide-up */
@keyframes fadeInSlideUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Inputs (text_input, text_area, selectbox, multiselect, slider) */
.stTextInput > div > div > input,
.stTextArea > div > div > textarea,
.stSelectbox > div > div > div > div > span,
.stMultiSelect > div > div > div > div > span,
.stSlider > div > div > div > div > div {
    background-color: var(--color-bg-secondary-light) !important;
    color: var(--color-text-primary-light) !important;
    border: 1px solid var(--color-border-light) !important;
    border-radius: 0.75rem;
    padding: 0.9rem 1.4rem;
    box-shadow: var(--shadow-inset);
    transition: all var(--transition-duration) var(--transition-ease);
}

body.dark-mode .stTextInput > div > div > input,
body.dark-mode .stTextArea > div > div > textarea,
body.dark-mode .stSelectbox > div > div > div > div > span,
body.dark-mode .stMultiSelect > div > div > div > div > span,
body.dark-mode .stSlider > div > div > div > div > div {
    background-color: var(--color-bg-secondary-dark) !important;
    color: var(--color-text-primary-dark) !important;
    border: 1px solid var(--color-border-dark) !important;
    box-shadow: var(--shadow-inset);
}

.stTextInput > div > div > input:focus,
.stTextArea > div > div > textarea:focus,
.stSelectbox > div > div > div:focus-within, /* For the selectbox container */
.stMultiSelect > div > div > div:focus-within {
    border-color: var(--color-accent-main) !important;
    box-shadow: 0 0 0 5px rgba(66, 133, 244, 0.2); /* Broader, softer glow */
    outline: none !important;
    transform: scale(1.005);
}

/* Labels for inputs */
.stTextInput label,
.stTextArea label,
.stSelectbox label,
.stMultiSelect label,
.stSlider label,
.stRadio label,
.stCheckbox label {
    color: var(--color-text-primary-light) !important;
    font-weight: 600;
    margin-bottom: 0.8rem;
    display: block;
    font-size: 1.1em;
}

body.dark-mode .stTextInput label,
body.dark-mode .stTextArea label,
body.dark-mode .stSelectbox label,
body.dark-mode .stMultiSelect label,
body.dark-mode .stSlider label,
body.dark-mode .stRadio label,
body.dark-mode .stCheckbox label {
    color: var(--color-text-primary-dark) !important;
}

/* Main Content Buttons */
.stButton > button {
    background: linear-gradient(45deg, var(--color-accent-main), var(--color-accent-light));
    color: white;
    border: none;
    border-radius: 1rem;
    padding: 1rem 2rem;
    font-weight: 700;
    transition: all var(--transition-duration) var(--transition-ease);
    box-shadow: var(--shadow-2);
    cursor: pointer;
    overflow: hidden;
    position: relative;
    z-index: 1;
    transform: translateZ(0); /* Force hardware acceleration */
}

.stButton > button:active {
    transform: translateY(2px) scale(0.98); /* More pronounced press effect */
    box-shadow: var(--shadow-1);
}

.stButton > button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.25);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.5s ease-out, height 0.5s ease-out;
    z-index: -1;
}

.stButton > button:hover::before {
    width: 300%;
    height: 300%;
}

.stButton > button:hover {
    background: linear-gradient(45deg, var(--color-accent-dark), var(--color-accent-main));
    transform: translateY(-8px) scale(1.05); /* Aggressive lift and scale */
    box-shadow: var(--shadow-3); /* Strongest shadow on hover */
}

body.dark-mode .stButton > button {
    background: linear-gradient(45deg, var(--color-accent-main), var(--color-accent-light));
    box-shadow: var(--shadow-2);
}
body.dark-mode .stButton > button:hover {
    background: linear-gradient(45deg, var(--color-accent-light), var(--color-accent-main));
    box-shadow: var(--shadow-3);
}


/* Expander (Accordion) Styling (Glassmorphism) */
.streamlit-expanderHeader {
    background: var(--glass-bg-light);
    backdrop-filter: blur(calc(var(--glass-blur) / 2)); /* Less blur for header */
    -webkit-backdrop-filter: blur(calc(var(--glass-blur) / 2));
    color: var(--color-text-primary-light);
    border-radius: 1rem;
    padding: 1rem 1.5rem;
    font-weight: 600;
    border: 1px solid var(--glass-border-light);
    box-shadow: var(--shadow-2);
    transition: all var(--transition-duration) var(--transition-ease);
    cursor: pointer;
    margin-bottom: 0.5rem; /* Space between header and content when closed */
}

body.dark-mode .streamlit-expanderHeader {
    background: var(--glass-bg-dark);
    border: 1px solid var(--glass-border-dark);
    box-shadow: var(--shadow-2);
    color: var(--color-text-primary-dark);
}

.streamlit-expanderHeader:hover {
    background: var(--color-accent-fade); /* Hint of accent color */
    transform: translateY(-4px);
    box-shadow: var(--shadow-3);
    border-color: var(--color-accent-main); /* Accent border on hover */
}

body.dark-mode .streamlit-expanderHeader:hover {
    background: var(--color-accent-fade);
    border-color: var(--color-accent-light);
}

.streamlit-expanderContent {
    background-color: var(--color-bg-secondary-light); /* Solid background for content */
    color: var(--color-text-primary-light);
    border: 1px solid var(--color-border-light);
    border-top: none; /* Connects visually to header */
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
    padding: 2rem;
    margin-top: -0.5rem; /* Overlap with header */
    box-shadow: var(--shadow-1); /* Subtle shadow for content */
    animation: fadeIn 0.6s var(--transition-ease) forwards; /* Fade in content */
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

body.dark-mode .streamlit-expanderContent {
    background-color: var(--color-bg-secondary-dark);
    color: var(--color-text-primary-dark);
    border: 1px solid var(--color-border-dark);
    box-shadow: var(--shadow-1);
}

/* Info/Success/Warning/Error boxes (Alerts) */
.stAlert {
    border-radius: 1rem;
    padding: 1.5rem 2rem;
    margin-bottom: 2rem;
    font-weight: 500;
    box-shadow: var(--shadow-2);
    transition: all var(--transition-duration) var(--transition-ease);
    border-left: 8px solid; /* Stronger accent border */
    position: relative;
    overflow: hidden;
}

.stAlert::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    transform: translateX(-100%);
    transition: transform 0.5s ease-out;
}

.stAlert:hover::before {
    transform: translateX(0);
}

.stAlert.stInfo {
    background-color: #e3f2fd; color: #1565c0; border-color: #64b5f6;
}
.stAlert.stSuccess {
    background-color: #e8f5e9; color: #2e7d32; border-color: #81c784;
}
.stAlert.stWarning {
    background-color: #fffde7; color: #ef6c00; border-color: #ffb300;
}
.stAlert.stError {
    background-color: #ffebee; color: #c62828; border-color: #ef9a9a;
}

body.dark-mode .stAlert.stInfo {
    background-color: #0d47a1; color: #90caf9; border-color: #42a5f5;
}
body.dark-mode .stAlert.stSuccess {
    background-color: #1b5e20; color: #a5d6a7; border-color: #81c784;
}
body.dark-mode .stAlert.stWarning {
    background-color: #ff6f00; color: #ffeb3b; border-color: #ffa726;
}
body.dark-mode .stAlert.stError {
    background-color: #b71c1c; color: #ef9a9a; border-color: #e57373;
}

.stAlert > div > div > div > div {
    color: inherit;
}

/* Dataframe styling */
.stDataFrame {
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: var(--shadow-2);
    border: 1px solid var(--color-border-light);
    margin-top: 2rem;
    margin-bottom: 2rem;
    transition: all var(--transition-duration) var(--transition-ease);
}
body.dark-mode .stDataFrame {
    box-shadow: var(--shadow-2);
    border: 1px solid var(--color-border-dark);
}

/* Metric boxes (Glassmorphism) */
.stMetric {
    background: var(--glass-bg-light);
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur));
    border-radius: 1rem;
    padding: 1.8rem;
    border: 1px solid var(--glass-border-light);
    box-shadow: var(--shadow-2);
    transition: all var(--transition-duration) var(--transition-ease);
    overflow: hidden;
    position: relative;
    z-index: 1;
}

body.dark-mode .stMetric {
    background: var(--glass-bg-dark);
    border: 1px solid var(--glass-border-dark);
    box-shadow: var(--shadow-2);
}

.stMetric:hover {
    transform: translateY(-8px); /* More significant lift */
    box-shadow: var(--shadow-3); /* Deeper shadow */
    border-color: var(--color-accent-main); /* Accent border on hover */
}

body.dark-mode .stMetric:hover {
    box-shadow: var(--shadow-3);
    border-color: var(--color-accent-light);
}

.stMetric::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(66, 133, 244, 0.08), rgba(66, 133, 244, 0));
    transition: all var(--transition-duration) var(--transition-ease);
    z-index: -1;
    opacity: 0;
}

.stMetric:hover::before {
    opacity: 1;
    transform: scale(1.1);
}

/* Radio buttons and checkboxes */
.stRadio div[role="radiogroup"] label, .stCheckbox label {
    padding: 0.8rem 0;
    color: var(--color-text-primary-light);
    font-weight: 500;
    transition: color var(--transition-duration) var(--transition-ease);
}
body.dark-mode .stRadio div[role="radiogroup"] label, body.dark-mode .stCheckbox label {
    color: var(--color-text-primary-dark);
}

/* Custom progress bar */
.stProgress > div > div {
    background-color: var(--color-border-light) !important;
    height: 10px !important;
    border-radius: 5px !important;
    overflow: hidden;
    box-shadow: var(--shadow-inset);
}

.stProgress > div > div > div {
    background: linear-gradient(90deg, var(--color-accent-light), var(--color-accent-main), var(--color-accent-dark)) !important;
    animation: progressFill 2s infinite linear;
    border-radius: 5px !important;
}

@keyframes progressFill {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
}

/* Custom Loader/Spinner */
.stSpinner > div > div {
    border-top-color: var(--color-accent-main) !important;
    border-left-color: var(--color-accent-main) !important;
    animation: spin 1s linear infinite, pulse 1.5s ease-in-out infinite alternate;
    width: 60px !important; /* Larger spinner */
    height: 60px !important;
    border-width: 6px !important; /* Thicker spinner */
}


/* --- Rules to Hide Streamlit Elements (No Change, just included for completeness) --- */

header {
    visibility: hidden;
    height: 0px;
    padding: 0px;
}
.stApp header {
    visibility: hidden;
    height: 0px;
    padding: 0px;
}

.css-1jc7ptx, .e1ewe7hr3, .e1ewe7hr1, .css-1dp5vir { /* Common hamburger classes */
    visibility: hidden;
    display: none;
}

footer {
    visibility: hidden;
    height: 0px;
    padding: 0px;
}
.stApp footer {
    visibility: hidden;
    height: 0px;
    padding: 0px;
}

/* Adjust main content padding to remove any leftover space if needed */
.main .block-container {
    padding-top: 2rem;
}
